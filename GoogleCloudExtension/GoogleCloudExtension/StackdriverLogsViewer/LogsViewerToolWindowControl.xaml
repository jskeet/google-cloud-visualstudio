<UserControl x:Class="GoogleCloudExtension.StackdriverLogsViewer.LogsViewerToolWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:viewer="clr-namespace:GoogleCloudExtension.StackdriverLogsViewer"
             xmlns:jlinq="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
            xmlns:templateSelectors="clr-namespace:JsonViewerDemo.TemplateSelectors"
            xmlns:valueConverters="clr-namespace:JsonViewerDemo.ValueConverters"
            xmlns:collection="clr-namespace:System.Collections.Generic;assembly=mscorlib"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.14.0"
             
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             mc:Ignorable="d"
             d:DesignHeight="1024" d:DesignWidth="860"             
             Name="LogsViewerToolWindow" 
             >

    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Theming/CommonResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BitmapImage x:Key="GoogleLogo" UriSource="logo_cloud_128.png" />

            <valueConverters:MethodToValueConverter x:Key="MethodToValueConverter"/>
            <valueConverters:ComplexPropertyMethodToValueConverter x:Key="ComplexPropertyMethodToValueConverter"/>
            <valueConverters:JValueConverter x:Key="JValueConverter"/>
            <valueConverters:JPropertyTypeToColorConverter x:Key="JPropertyTypeToColorConverter"/>
            <valueConverters:JValueTypeToColorConverter x:Key="JValueTypeToColorConverter"/>
            <valueConverters:JArrayLengthConverter x:Key="JArrayLengthConverter"/>

            <HierarchicalDataTemplate x:Key="KeyValuePairJObject"  
                                      ItemsSource="{Binding Value}">
                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text="{Binding Path=Key}" Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                    <TextBlock Text=": "  Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                </StackPanel>
            </HierarchicalDataTemplate>

            <DataTemplate x:Key="KeyValuePair">
                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text="{Binding Path=Key}"   Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                    <TextBlock Text=": "   Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                    <TextBlock Text="{Binding Path=Value}"    Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                </StackPanel>
            </DataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type jlinq:JArray}" ItemsSource="{Binding Converter={StaticResource MethodToValueConverter}, ConverterParameter='Children'}">
                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text="array"   Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                    <TextBlock Text="{Binding Converter={StaticResource JArrayLengthConverter}}" />
                </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate  x:Key="ArrayPropertyTemplate" DataType="{x:Type jlinq:JProperty}" 
                                       ItemsSource="{Binding Converter={StaticResource ComplexPropertyMethodToValueConverter}, ConverterParameter='Children'}">
                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text="{Binding Path=Name, Mode=OneWay}" />
                    <TextBlock Text=" : "/>
                    <TextBlock Text="array"   Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                    <TextBlock Text="{Binding Converter={StaticResource JArrayLengthConverter}}" />
                </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate  x:Key="ObjectPropertyTemplate" DataType="{x:Type jlinq:JProperty}" 
                                       ItemsSource="{Binding Converter={StaticResource ComplexPropertyMethodToValueConverter}, ConverterParameter='Children'}">
                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text="{Binding Path=Name, Mode=OneWay}" />
                    <TextBlock Text=" : "/>
                    <TextBlock Text="{}{ }"/>
                </StackPanel>
            </HierarchicalDataTemplate>
            <DataTemplate x:Key="PrimitivePropertyTemplate" DataType="{x:Type jlinq:JProperty}" >

                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text="{Binding Path=Name, Mode=OneWay}" />
                    <TextBlock Text=" : "/>
                    <TextBlock Text="  "/>

                    <!-- MouseLeftButtonDown="JValue_OnMouseLeftButtonDown" -->
                    <TextBlock  Width="300"  
                           TextWrapping="Wrap" Text="{Binding Path=Value, Converter={StaticResource JValueConverter}}" 
                            />
                </StackPanel>
            </DataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type jlinq:JObject}" ItemsSource="{Binding Converter={StaticResource MethodToValueConverter}, ConverterParameter='Children'}">
                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text=" "/>
                    <TextBlock Text="{}{ }" />
                </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type jlinq:JConstructor}" ItemsSource="{Binding Converter={StaticResource MethodToValueConverter}, ConverterParameter='Children'}">
                <TextBlock Text="Constructor">
                </TextBlock>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type jlinq:JRaw}" ItemsSource="{Binding Converter={StaticResource MethodToValueConverter}, ConverterParameter='Children'}">
                <TextBlock Text="Raw">
                </TextBlock>
            </HierarchicalDataTemplate>

            <templateSelectors:JPropertyDataTemplateSelector x:Key="JPropertyDataTemplateSelector" 
                                             ArrayPropertyTemplate="{StaticResource ArrayPropertyTemplate}"
                                             ObjectPropertyTemplate="{StaticResource ObjectPropertyTemplate}"
                                             PrimitivePropertyTemplate ="{StaticResource PrimitivePropertyTemplate}"/>

            <DataTemplate DataType="{x:Type jlinq:JValue}">
                <!-- MouseLeftButtonDown="JValue_OnMouseLeftButtonDown" -->
                <TextBlock  Width="300" 
                           TextWrapping="Wrap" Text="{Binding Converter={StaticResource JValueConverter}}" 
                            />
            </DataTemplate>


            <viewer:LogItemConverter x:Key="LogItemConverter"/>




            <!--  The toggle button -->
            <viewer:VisbilityToBooleanConverter x:Key="VisbilityToBooleanConverter"/>
            <viewer:VisibilityToNullableBooleanConverter x:Key="VisibilityToNullableBooleanConverter"/>

            <DataTemplate x:Key="ExpandDetails">
                <ToggleButton Name="ShowDetails" 
                              IsChecked="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, 
                                                  Path=DetailsVisibility, 
                                                  Converter={StaticResource VisbilityToBooleanConverter}, 
                                                  Mode=OneWay}" 
                              Margin="4" />
            </DataTemplate>

            <!-- Cell , row style -->
            <Style x:Key="cellStyle" TargetType="DataGridCell">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridCell">
                            <Border  BorderThickness="0">
                                <Border x:Name="border" Padding="0, 2, 0, 2" >
                                    <ContentPresenter />
                                </Border>
                            </Border>
                            <!--<ControlTemplate.Triggers>  
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#F2A600"/>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#F2A600"/>
                                </Trigger>
                            </ControlTemplate.Triggers>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Background" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="Black" BorderThickness="0">
                            <Border x:Name="border"
                              BorderBrush="White"
                              BorderThickness="2"
                              Background="Black"
                              CornerRadius="5">
                                <ContentPresenter />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true">
                                <Setter TargetName="border" Property="Background" Value="Orange"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            -->


            <!--<DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver"
                           Value="True">
                            <Setter Property="Background"
                               Value="Green" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>-->

            <!--<Setter Property="Padding"  Value="0, 10, 0, 2"  />  Seems paddin is not changing anything-->
            <Style x:Key="rowStyle" TargetType="DataGridRow">
                <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
                <Setter Property="Margin" Value="0, 0, 0, 1"/>
                <Setter Property="BorderThickness" Value="0, 0, 0, 0"/>
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="Background" Value="#FFFDFDFD" />
                <Style.Triggers>
                    <!-- http://stackoverflow.com/questions/3614837/wpf-style-trigger-for-datagridrow-background-color-trumped-by-alternatingrowback -->
                    <Trigger Property="AlternationIndex" Value="1">
                        <Setter Property="Background" Value="#F5F5F5"/>
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FFFFD6" />
                        <!--<Setter Property="Foreground" Value="White" />-->
                        <!--<Setter Property="IsSelected" Value="True" />-->
                    </Trigger>
                </Style.Triggers>
                <!--
            <Setter Property="Background" Value="Black" /> 
            -->
            </Style>
            <!--<Style TargetType="{x:Type DataGrid}">
                <Setter Property="AlternatingRowBackground" Value="{DynamicResource AlternatingRow}"/>
            </Style>-->

            <ControlTemplate x:Key="FilterSwitchButton" TargetType="{x:Type Button}">
                <Button Style="{StaticResource CommonButtonDynamicStyle}"
                    ToolTip="{Binding Path=FilterSwitchButtonContent}"
                                    Command="{Binding Path=FilterSwitchCommand}"
                                    >
                    <ContentPresenter />
                </Button>
            </ControlTemplate>


            <Style x:Key="ArrowToggleButton" TargetType="ToggleButton">
                <Setter Property="Width" Value="20" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <!--BorderBrush="Black" BorderThickness="1 1 1 1" CornerRadius="8 8 8 8"-->
                            <Border
                                    Background="Transparent"
                                    >
                                <Path Name="Arrow" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 4 4 L 8 0 Z" />
                                    <Setter Property="ToolTip" Value="Expand All" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
                                    <Setter Property="ToolTip" Value="Collapse All" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="WartermarkedTextBox" TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                <Style.Resources>
                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                        <VisualBrush.Visual>
                            <Label Content="Search" Foreground="LightGray" />
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Style.Resources>
                <Style.Triggers>
                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                    </Trigger>
                    <Trigger Property="Text" Value="{x:Null}">
                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Style to be applied to the command bar, uses the right theming resource keys. -->
            <!-- TODO: put this into common style shared by Cloud Explorer too? -->
            <Style x:Key="CommandBarStyle" TargetType="{x:Type StackPanel}">
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarGradientKey}}" />
                <!--<Setter Property="Background" Value="Olive" />-->
                <Setter Property="HorizontalAlignment" Value="Stretch" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="White" >
        <Grid.Resources>
            <!--<Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
        </Style>-->
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto"  />
        </Grid.RowDefinitions>

        <!-- Logo project account -->
        <StackPanel Margin="0, 0, 0, 6" Style="{StaticResource CommandBarStyle}"
                    >
            <Image Source="{Binding Path=CloudLogo}" Height="20" Width="20" HorizontalAlignment="Left" Margin="12, 0, 6, 0"/>
            <TextBlock Text="Project:" VerticalAlignment="Center" Padding="0, 5, 0, 5"/>
            <TextBlock Text="{Binding Path=Project}" VerticalAlignment="Center" Margin="6, 0, 0, 0"/>
            <TextBlock Text="Account:" VerticalAlignment="Center" Margin="12, 0, 0, 0"/>
            <TextBlock Text="{Binding Path=Account}" VerticalAlignment="Center" Margin="6, 0, 0, 0"/>

            <!--<Border BorderThickness="0, 0, 0, 0" BorderBrush="LightGray">
                <Image Source="{Binding Path=CloudLogo}" Height="25" HorizontalAlignment="Left" Margin="0, 0, 0, 2"/>
            </Border>
            <Border BorderThickness="0, 0, 0, 1" BorderBrush="LightGray" >
                -->
            <!-- The trigger works, but I don't need it.
                <Border.Resources>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Account}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="14" />
                    </Style>
                </Border.Resources>-->
            <!--
                <StackPanel Orientation="Horizontal" Margin="2, 3, 0, 5"  >
                    <TextBlock Text="Project  :" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Path=Project}" VerticalAlignment="Center" Margin="3, 0, 0, 0"/>
                    <TextBlock Text="Account  :" VerticalAlignment="Center" Margin="10, 0, 0, 0"/>
                    <TextBlock Text="{Binding Path=Account}" VerticalAlignment="Center" Margin="3, 0, 0, 0"/>

                </StackPanel>
            </Border>-->
        </StackPanel>

        <!-- Filters -->
        <StackPanel Grid.Row="1" Margin="12, 6, 12, 6"  
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Stretch"
                    Orientation="Vertical"
                    Background="White"
              >

            <!--<Grid  Width="{Binding ActualWidth, ElementName=BasicFilters}"-->
            <!-- Advanced Filter -->
            <StackPanel Visibility="{Binding Path=AdvancedFilterVisibility}" Margin="0">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <TextBox  Grid.Column="0" Grid.Row="0" Margin="0, 0, 0, 0"
                        VerticalAlignment="Center" Padding="8, 5, 8, 5"
                        TextWrapping="Wrap" AcceptsReturn="True"
                        Text="{Binding Path=AdvancedFilter}"
                        MinLines="3" MaxLines="100"  
                        />
                    <Button Grid.Column="0" Grid.Row="1" Margin="0, 1, 3, 0"
                        Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top"
                                ToolTip="{Binding Path=AdvancedFilterHelpMessage}" 
                                Command="{Binding Path=AdvancedFilterHelpCommand}"
                                BorderThickness="0"   
                                    >
                        <Image x:Name="questionMark" Source="{Binding Path=FilterHelpImage}"  Width="16" Height="16" />
                    </Button>
                    <Button Grid.Column="1" Grid.Row="0" Margin="12,0,0,0" Template="{StaticResource FilterSwitchButton}"
                        HorizontalAlignment="Right" VerticalAlignment="Bottom">To Simple Filter</Button>
                </Grid>

                <Button Grid.Column="1" Command="{Binding Path=SubmitAdvancedFilterCommand}" 
                        Margin="0, -6, 6, 6"
                        VerticalAlignment="Bottom" HorizontalAlignment="Left"
                        Style="{StaticResource CommonButtonStandardStyle}"
                        Content="Sumit Filter" 
                        />
            </StackPanel>
            <!-- Basic Filter -->
            <StackPanel Margin="0" Visibility="{Binding Path=BasicFilterVisibility}">

                <!-- Combo Boxes  -->
                <StackPanel  Orientation="Horizontal" 
                        Background="White" HorizontalAlignment="Left" VerticalAlignment="Center"
                        Margin="0, 0, 0, 6" x:Name="BasicFilters"                        
                        >
                    <StackPanel.Resources>
                        <Style TargetType="ComboBox">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Margin" Value="0, 0, 6, 0" />
                            <Setter Property="Padding" Value="8, 5, 8, 5" />
                        </Style>

                    </StackPanel.Resources>
                    <ComboBox Name="comboResource" Width="160" 
                          ToolTip="{Binding Path=ResourcesComboBoxTip}"
                          ItemsSource="{Binding Path=ResourcesSelection}"
                          SelectedItem="{Binding Path=SelectedResource,Mode=TwoWay}"
                          DisplayMemberPath="DisplayName" 
                          Loaded="ComboBox_Loaded"
                              VerticalAlignment="Center"
                          >
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="Background" Value="White" />
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>

                    <ComboBox Name="comboLogID" Width="160"
                          ItemsSource="{Binding Path=LogIDs,Mode=OneWay}"
                          SelectedItem="{Binding Path=SelectedLogID,Mode=TwoWay}"
                          Loaded="ComboBox_Loaded"
                              VerticalAlignment="Center"
                          />
                    <ComboBox Name="comboSeverity" Width="160"
                          ItemsSource="{Binding Path=LogSeverityList}"
                          SelectedItem="{Binding Path=SelectedLogSeverity}"
                          Loaded="ComboBox_Loaded"
                              VerticalAlignment="Center"
                          />
                    <viewer:JumpToLogDateTimePicker DataContext="{Binding Path=DateTimePickerViewModel}"                                                     
                                                Margin="0, 0, 6, 0"/>

                    <Button Grid.Column="1"
                        x:Name="btnRefresh"
                        ToolTip="{Binding Path=RefreshCommandToolTip}"
                        Command="{Binding Path=RefreshCommand}" Margin="6, 0, 16, 0"
                        PreviewMouseLeftButtonDown="btnRefresh_MouseDown"
                        PreviewMouseLeftButtonUp="btnRefresh_MouseUp"
                        MouseEnter="btnRefresh_MouseEnter"
                        MouseLeave="btnRefresh_MouseLeave"
                        VerticalAlignment="Center"
                            HorizontalAlignment="Right"
                        >
                        <Button.Style>
                            <Style  TargetType="Button">
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <ContentPresenter></ContentPresenter>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <Image x:Name="refreshImage" Width="32" Height="32" Margin="-1"/>
                    </Button>
                </StackPanel>

                <!-- Text search box -->
                <Grid Margin="0, 6, 0, 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0"
                        BorderThickness="1" BorderBrush="LightGray"
                        >
                        <Border.Resources>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsInsideVS}" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.SearchBoxBorderKey}}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Resources>
                        <Grid x:Name="SimpleTextSearchPanel">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" Margin="0" 
                             BorderThickness="0"
                             x:Name="txtMessage" TextWrapping="Wrap"                                             
                             Padding="8, 5, 8, 5"
                             Text="{Binding MessageFilter,UpdateSourceTrigger=PropertyChanged,Mode=OneWayToSource}"                                               
                             Style="{StaticResource WartermarkedTextBox}"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center" Width="698"
                             >
                            </TextBox>
                            <Button Grid.Column="1" Margin="2, 0, 2, 0"
                            Background="Transparent"
                            BorderThickness="0"
                        HorizontalAlignment="Right" VerticalAlignment="Center"
                                    ToolTip="Apply filter on server and fetch more."
                                    Command="{Binding Path=SimpleTextFilterCommand}"
                                    >
                                <Image Source="{Binding Path=SearchIcon}" Height="13" Width="13" />
                            </Button>
                            <!--<Button Grid.Column="2"
                    Template="{StaticResource FilterSwitchButton}" 
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Margin="0,0,1,0"
                        />-->
                        </Grid>
                    </Border>
                    <Button Grid.Column="1" Margin="12,0,0,0"
                            Template="{StaticResource FilterSwitchButton}"
                        HorizontalAlignment="Right" VerticalAlignment="Bottom">To Advanced Filter</Button>
                </Grid>
            </StackPanel>
            <!--<ComboBox x:Name="comboFilterSwitch" HorizontalAlignment="Center" SelectedIndex="0" 
                               VerticalAlignment="Center" 
                          IsDropDownOpen="{Binding Path=IsSwitchFilterDropDownOpen}"
                          BorderThickness="0"
                          Background="White" Loaded="ComboBox_Loaded"
                          >
                    <ComboBoxItem x:Name="FirstItem" HorizontalAlignment="Center"  Content="" >
                        <ComboBoxItem.Template>
                            <ControlTemplate>
                                <Button Content="{Binding Path=FilterSwitchButtonContent}"
                                    Command="{Binding Path=FilterSwitchCommand}"
                                        Padding="3" BorderThickness="0"
                                        Background="White"
                                    />
                            </ControlTemplate>
                        </ComboBoxItem.Template>
                    </ComboBoxItem>
                </ComboBox>-->
        </StackPanel>

        <Grid Grid.Row="2" Margin="12, 6, 12, 12">

            <!--Right under the header, set top margin to 19 (18 + border 1)-->
            <Border Background="LightGray" Panel.ZIndex="20" HorizontalAlignment="Stretch"  VerticalAlignment="Top" 
                    Margin="0, 19, 0, 0"  
                    >
                <DockPanel  Margin="9, 1, 0, 1" 
                        >
                    <DockPanel.Resources>
                        <Style TargetType="TextBlock" >
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DockPanel.Resources>
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                        <TextBlock Text="{Binding Path=FirstRowDate}" Margin="0, 5, 3, 5" VerticalAlignment="Center"
                           />
                        <ComboBox x:Name="comboTimeZone" Margin="3, 0, 18, 0" VerticalAlignment="Center"
                             ToolTip="Click To Select Different Timezone"
                             BorderThickness="0"
                               SelectedIndex="0"
                               Background="Transparent"
                              Loaded="ComboBox_Loaded"
                              ItemsSource="{Binding Path=SystemTimeZones}"
                              SelectedItem="{Binding Path=SelectedTimeZone}"
                             >
                        </ComboBox>
                    </StackPanel>
                    <Expander DockPanel.Dock="Right" x:Name="allExpander"       
                             Margin="0, 0, 8, 0"                            
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                     IsExpanded="{Binding ToggleExapandAllExpanded}"
                        
                        ToolTip="{Binding ToggleExapandAllToolTip}" >


                        <Expander.LayoutTransform >
                            <ScaleTransform ScaleX="1" ScaleY="1"></ScaleTransform>
                        </Expander.LayoutTransform>
                    </Expander>
                </DockPanel>
            </Border>

            <DataGrid 
                Panel.ZIndex="10"
             x:Name="dg" 
                   Padding="0,0, 0, 0" IsReadOnly="True"
                  GridLinesVisibility="None" 
                  CanUserResizeRows="False"
                  RowStyle="{StaticResource rowStyle}"
                  CellStyle="{StaticResource cellStyle}"
                  AutoGenerateColumns="False"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HeadersVisibility="Column"     
                  ItemsSource="{Binding Path=LogEntryList}" 
                  Background="White"
                  BorderThickness="1"
                  BorderBrush="LightGray"
                  EnableRowVirtualization="True"   
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                  PreviewMouseDown="dg_PreviewMouseDown"      
                  AlternationCount="2"
                  ScrollViewer.ScrollChanged="dtGrid_ScrollChanged"
                  ColumnHeaderHeight="18"
                 >
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" 
                   Color="Black"/>
                </DataGrid.Resources>
                <DataGrid.Style>
                    <Style TargetType="DataGrid">
                        <Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsExpanded, ElementName=allExpander}" Value="True">
                                <Setter Property="RowDetailsVisibilityMode" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>
                <!--  AlternatingRowBackground="AliceBlue" -->
                <!--<DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DarkGray"/>
            </DataGrid.Resources>-->
                <!--<DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                   Color="#FF0000"/>
            </DataGrid.Resources>-->

                <!--                   
                AreRowDetailsFrozen="True" 
            -->

                <!--
            <DataGrid.Style>
                <Style TargetType="DataGridDetailsPresenter">
                    <Setter TargetName="" ></Setter>
                </Style>
            </DataGrid.Style>
            <DataGrid.Style>
                <Style TargetType="DataGrid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Text}" Name="Somename" Value="Something">
                            <Setter Property="RowDetailsVisibilityMode" Value="{Binding}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Style>
                -->

                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <!-- <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Path=City}" FontWeight="Bold" Padding="3"/>
                            </StackPanel>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>  -->
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <!--
                                        This appllies customized toggle button.
                                            <Expander IsExpanded="True" Template="{StaticResource SimpleExpanderTemp}">-->
                                            <!--<Expander IsExpanded="True"  Background="LightGray">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal" Margin="0, 1, 0, 1">
                                                        <TextBlock Text="{Binding Path=Name}" />
                                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=ItemCount}" Margin="8,0,4,0"/>
                                                        <TextBlock Grid.Row="0" Grid.Column="2" Text="Element(s)"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>-->

                                            <StackPanel  Background="LightGray" >
                                                <StackPanel.Resources>
                                                    <Style TargetType="TextBlock" >
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                    </Style>
                                                </StackPanel.Resources>
                                                <StackPanel Orientation="Horizontal" Margin="9, 1, 0, 1" >
                                                    <TextBlock Text="{Binding Path=Name}"  Padding="0, 5, 4, 5" />
                                                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=ItemCount}" Padding="4, 5, 2, 5"/>
                                                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Element(s)" Padding="0, 5, 8, 5"/>
                                                </StackPanel>
                                                <ItemsPresenter />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <!--
                            Adding button on first group won't help.  When user scroll down, the button is hidden.
                            The trigger works 
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                -->
                                <!--
                                        This appllies customized toggle button.
                                            <Expander IsExpanded="True" Template="{StaticResource SimpleExpanderTemp}">-->
                                <!--<Expander IsExpanded="True"  Background="LightGray">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal" Margin="0, 1, 0, 1">
                                                        <TextBlock Text="{Binding Path=Name}" />
                                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=ItemCount}" Margin="8,0,4,0"/>
                                                        <TextBlock Grid.Row="0" Grid.Column="2" Text="Element(s)"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>-->
                                <!--

                                                <StackPanel  Background="LightGray" >
                                                    <StackPanel.Resources>
                                                        <Style TargetType="TextBlock" >
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                        </Style>
                                                    </StackPanel.Resources>
                                                    <DockPanel>
                                                    <StackPanel Orientation="Horizontal" Margin="9, 1, 0, 1" >
                                                        <TextBlock Text="{Binding Path=Name}"  Padding="0, 5, 4, 5" />
                                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=ItemCount}" Padding="4, 5, 2, 5"/>
                                                        <TextBlock Grid.Row="0" Grid.Column="2" Text="Element(s)" Padding="0, 5, 8, 5"/>

                                                    </StackPanel>
                                                        <ToggleButton DockPanel.Dock="Right"
                                                                      Margin="0, 0, 12, 0"
                                                            Style="{StaticResource ArrowToggleButton}"
                                                                      Padding="0, 5, 0, 5"
                                                                      VerticalAlignment="Center"
                                                                      HorizontalAlignment="Right"
                                                                      />                                                    
                                                    </DockPanel>
                                                    <ItemsPresenter />
                                                </StackPanel>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>-->
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </DataGrid.GroupStyle>

                <DataGrid.Columns>
                    <!--<DataGridTemplateColumn>
                    -->
                    <!-- TODO:  fix the button binding ToggleExpandAllCommand problem
                                Because the DataSource is set to LogEntryList
                    -->
                    <!--
                    <DataGridTemplateColumn.Header>
                        <Button Content="E H" Name="btnExpandAll" Click="btnExpandAll_Click" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Expander 
                                      IsExpanded="{Binding Path=DetailsVisibility,
                                RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                Converter={StaticResource VisibilityToNullableBooleanConverter}}"
                                      Template="{StaticResource SimpleExpanderTemp}" 
                                      Margin="10, 0, 3, 0 "
                                      >
                            </Expander>

                            -->
                    <!-- <Button Click="ShowHideDetails">Details</Button> -->
                    <!--
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->

                    <!--<DataGridTextColumn Binding="{Binding SeverityLevel}"  >
                </DataGridTextColumn>-->

                    <!-- Log Level -->
                    <DataGridTemplateColumn IsReadOnly="True">
                        <!--<DataGridTemplateColumn.Header>
                        -->
                        <!--<TextBlock >a</TextBlock>-->
                        <!--
                        <Expander x:Name="allExpander" IsExpanded="False" 
                                  ToolTip="Toggle All Log Entries Detail View"
                                  Expanded="allExpander_Expanded" Collapsed="allExpander_Collapsed"
                                 
                                  >
                            <Expander.LayoutTransform >
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"></ScaleTransform>
                            </Expander.LayoutTransform>

                        </Expander>
                        -->
                        <!--<Button  ToolTip="Exapand All" Click="btnExpandAll_Click"           
                                     Padding="6" BorderThickness="1" 
                                 
                                 >
                            <Path Data="M0,0L3.5,4 7,0z" Fill="#FF000000" Name="Arrow"
                                    Margin="3,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button>-->
                        <!--

                    </DataGridTemplateColumn.Header>-->
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="{Binding Path=SeverityLevel}" Width="12" Margin="9, 1, 8, 1" 
                                   ToolTip="{Binding Path=SeverityTip}"
                                   />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Binding="{Binding Time,StringFormat='HH:mm:ss.fff'}" Width="90"/>

                    <!--<DataGridTemplateColumn >
                    -->
                    <!--
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Content, RelativeSource=
                                         {RelativeSource Mode=TemplatedParent}}"/>
                                <TextBox x:Name="txtTime" Width="100" TextChanged="TextChanged"  />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>-->
                    <!--
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock  Text="{Binding Time,StringFormat='HH:mm:ss.fff'}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->


                    <DataGridTextColumn Binding="{Binding Message}"
                                Header="Message">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <!--<TextBlock Text="{Binding Content, RelativeSource=
                                         {RelativeSource Mode=TemplatedParent}}"/>-->
                                    <!-- TextBox x:Name="txtMessage" Width="150" TextChanged="TextChanged"  /-->
                                    <!--<TextBox x:Name="txtMessage" Width="500" TextWrapping="Wrap"
                                         Margin="50, 0, 0, 0" FontSize="14"
                                         Padding="0, 1, 0, 1"
                                         Text="{Binding DataContext.MessageFilter,UpdateSourceTrigger=PropertyChanged,
                                                Mode=OneWayToSource,
                                               RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"  >
                                    -->
                                    <!-- Watermark background -->
                                    <!--
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                            <Style.Resources>
                                                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                                    <VisualBrush.Visual>
                                                        <Label Content="Search" Foreground="LightGray" />
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Style.Resources>
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                </Trigger>
                                                <Trigger Property="Text" Value="{x:Null}">
                                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="True">
                                                    <Setter Property="Background" Value="White" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>-->
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                </DataGrid.Columns>

                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <!-- Is Border necessary ?  Leave it for now
                    -->
                        <Border BorderThickness="0" Background="White" Padding="30, 0, 0 , 0" Margin="0" >
                            <TreeView Name="ResultTreeView" BorderThickness="0" 
                                  ItemsSource="{Binding Converter={StaticResource LogItemConverter}}"
                                  ItemTemplateSelector="{StaticResource JPropertyDataTemplateSelector}"   
                                  Foreground="Brown"
                                  >
                                <TreeView.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter />
                                    </ControlTemplate>
                                </TreeView.Template>
                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="{x:Type TreeViewItem}" >
                                        <Setter Property="IsExpanded" Value="True" />
                                        <Setter Property="Foreground" Value="DarkSlateGray" />
                                    </Style>
                                </TreeView.ItemContainerStyle>
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType="{x:Type viewer:ObjectNode}" ItemsSource="{Binding Path=Children}">
                                        <StackPanel Orientation="Horizontal" >
                                            <TextBlock Text="{Binding Path=Name}" Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                                            <TextBlock Text=":" Padding="3, 0, 3, 1"   Margin="0,0,5,0" Visibility="{Binding ValueVisibility}"/>
                                            <TextBlock Text="{Binding Path=DisplayValue}"/>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                    <HierarchicalDataTemplate DataType="{x:Type viewer:Payload}" ItemsSource="{Binding Path=Value}">
                                        <StackPanel Orientation="Horizontal" >
                                            <TextBlock Text="{Binding Path=Name}" Padding="3, 0, 3, 1"   Margin="0,0,5,0" />
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>
                            </TreeView>

                        </Border>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>

            </DataGrid>
        </Grid>
        <Grid Grid.Row="3"  
              Margin="12, 0, 12, 0"             
              Background="White" >
            <TextBlock 
                Margin="0, 0, 0, 12"
                Text="{Binding ErrorMessage}" TextWrapping="Wrap" TextAlignment="Left"
                        MaxHeight="120" Padding="8, 5, 8, 5"
                        VerticalAlignment="Bottom"
                        Background="White"
                        Foreground="Red"     
                        Visibility="{Binding Path=ProgressErrorMessageVisibility}"
                        />
            <StackPanel 
                Margin="0, 0, 0, 12"
                Visibility="{Binding Path=CancelLoadingVisibility}"
                        Orientation="Horizontal" HorizontalAlignment="Center"
                        >
                <TextBlock Text="{Binding LogLoddingProgress}" Padding="8, 5, 8, 5"
                           Foreground="Red"
                           />
                <Button 
                    Margin="12, 0, 12, 0"
                    HorizontalAlignment="Right" Name="Cancel" 
                    Content="Cancel"
                    Command="{Binding Path=CancelLoadingCommand}"
                    VerticalAlignment="Bottom"
                    Visibility="{Binding Path=CancelLoadingButtonVisibility}"
                    Style="{StaticResource CommonButtonStandardStyle}"                    
                    />
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
