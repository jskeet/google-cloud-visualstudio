<UserControl x:Class="GoogleCloudExtension.StackdriverLogsViewer.LogsViewerToolWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewer="clr-namespace:GoogleCloudExtension.StackdriverLogsViewer"
             xmlns:jlinq="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
            xmlns:templateSelectors="clr-namespace:JsonViewerDemo.TemplateSelectors"
            xmlns:valueConverters="clr-namespace:JsonViewerDemo.ValueConverters"
            xmlns:collection="clr-namespace:System.Collections.Generic;assembly=mscorlib"
             
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             mc:Ignorable="d"
             d:DesignHeight="1024" d:DesignWidth="640"             
             Name="LogsViewerToolWindow" 
             >

    <UserControl.Resources>

        <ResourceDictionary>

            
            <BitmapImage x:Key="GoogleLogo" UriSource="logo_cloud_128.png" />

            <valueConverters:MethodToValueConverter x:Key="MethodToValueConverter"/>
            <valueConverters:ComplexPropertyMethodToValueConverter x:Key="ComplexPropertyMethodToValueConverter"/>
            <valueConverters:JValueConverter x:Key="JValueConverter"/>
            <valueConverters:JPropertyTypeToColorConverter x:Key="JPropertyTypeToColorConverter"/>
            <valueConverters:JValueTypeToColorConverter x:Key="JValueTypeToColorConverter"/>
            <valueConverters:JArrayLengthConverter x:Key="JArrayLengthConverter"/>
            
            <HierarchicalDataTemplate x:Key="KeyValuePairJObject"  
                                      ItemsSource="{Binding Value}">
                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text="{Binding Path=Key}" Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                    <TextBlock Text=": "  Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                </StackPanel>
            </HierarchicalDataTemplate>
            
            <DataTemplate x:Key="KeyValuePair">
                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text="{Binding Path=Key}"   Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                    <TextBlock Text=": "   Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                    <TextBlock Text="{Binding Path=Value}"    Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                </StackPanel>
            </DataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type jlinq:JArray}" ItemsSource="{Binding Converter={StaticResource MethodToValueConverter}, ConverterParameter='Children'}">
                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text="array"   Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                    <TextBlock Text="{Binding Converter={StaticResource JArrayLengthConverter}}" />
                </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate  x:Key="ArrayPropertyTemplate" DataType="{x:Type jlinq:JProperty}" 
                                       ItemsSource="{Binding Converter={StaticResource ComplexPropertyMethodToValueConverter}, ConverterParameter='Children'}">
                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text="{Binding Path=Name, Mode=OneWay}" />
                    <TextBlock Text=" : "/>
                    <TextBlock Text="array"   Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                    <TextBlock Text="{Binding Converter={StaticResource JArrayLengthConverter}}" />
                </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate  x:Key="ObjectPropertyTemplate" DataType="{x:Type jlinq:JProperty}" 
                                       ItemsSource="{Binding Converter={StaticResource ComplexPropertyMethodToValueConverter}, ConverterParameter='Children'}">
                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text="{Binding Path=Name, Mode=OneWay}" />
                    <TextBlock Text=" : "/>
                    <TextBlock Text="{}{ }"/>
                </StackPanel>
            </HierarchicalDataTemplate>
            <DataTemplate x:Key="PrimitivePropertyTemplate" DataType="{x:Type jlinq:JProperty}" >

                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text="{Binding Path=Name, Mode=OneWay}" />
                    <TextBlock Text=" : "/>
                    <TextBlock Text="  "/>

                    <!-- MouseLeftButtonDown="JValue_OnMouseLeftButtonDown" -->
                    <TextBlock  Width="300"  
                           TextWrapping="Wrap" Text="{Binding Path=Value, Converter={StaticResource JValueConverter}}" 
                            />
                </StackPanel>
            </DataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type jlinq:JObject}" ItemsSource="{Binding Converter={StaticResource MethodToValueConverter}, ConverterParameter='Children'}">
                <StackPanel Orientation="Horizontal" Margin="1">
                    <TextBlock Text=" "/>
                    <TextBlock Text="{}{ }" />
                </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type jlinq:JConstructor}" ItemsSource="{Binding Converter={StaticResource MethodToValueConverter}, ConverterParameter='Children'}">
                <TextBlock Text="Constructor">
                </TextBlock>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type jlinq:JRaw}" ItemsSource="{Binding Converter={StaticResource MethodToValueConverter}, ConverterParameter='Children'}">
                <TextBlock Text="Raw">
                </TextBlock>
            </HierarchicalDataTemplate>

            <templateSelectors:JPropertyDataTemplateSelector x:Key="JPropertyDataTemplateSelector" 
                                             ArrayPropertyTemplate="{StaticResource ArrayPropertyTemplate}"
                                             ObjectPropertyTemplate="{StaticResource ObjectPropertyTemplate}"
                                             PrimitivePropertyTemplate ="{StaticResource PrimitivePropertyTemplate}"/>

            <DataTemplate DataType="{x:Type jlinq:JValue}">
                <!-- MouseLeftButtonDown="JValue_OnMouseLeftButtonDown" -->
                <TextBlock  Width="300" 
                           TextWrapping="Wrap" Text="{Binding Converter={StaticResource JValueConverter}}" 
                            />
            </DataTemplate>


            <viewer:LogItemConverter x:Key="LogItemConverter"/>




            <!--  The toggle button -->
            <viewer:VisbilityToBooleanConverter x:Key="VisbilityToBooleanConverter"/>
            <viewer:VisibilityToNullableBooleanConverter x:Key="VisibilityToNullableBooleanConverter"/>

            <DataTemplate x:Key="ExpandDetails">
                <ToggleButton Name="ShowDetails" 
                              IsChecked="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, 
                                                  Path=DetailsVisibility, 
                                                  Converter={StaticResource VisbilityToBooleanConverter}, 
                                                  Mode=OneWay}" 
                              Margin="4" />
            </DataTemplate>

            <!-- Cell , row style -->
            <Style x:Key="cellStyle" TargetType="DataGridCell">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridCell">
                            <Border  BorderThickness="0">
                                <Border x:Name="border" Padding="0, 2, 0, 2" >
                                    <ContentPresenter />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="Orange"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Background" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="Black" BorderThickness="0">
                            <Border x:Name="border"
                              BorderBrush="White"
                              BorderThickness="2"
                              Background="Black"
                              CornerRadius="5">
                                <ContentPresenter />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true">
                                <Setter TargetName="border" Property="Background" Value="Orange"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            -->
            </Style>

            <!--<Setter Property="Padding"  Value="0, 10, 0, 2"  />  Seems paddin is not changing anything-->
            <Style x:Key="rowStyle" TargetType="DataGridRow">
                <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
                <Setter Property="Margin" Value="0, 0, 0, 1"/>
                <Setter Property="BorderThickness" Value="0, 0, 0, 0"/>
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="Background" Value="#FFFDFDFD" />
                <!--
            <Setter Property="Background" Value="Black" /> 
            -->
            </Style>


        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="White" >
        <Grid.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
        </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Vertical" Margin="2, 0, 0, 3" >
            <Border BorderThickness="0, 0, 0, 0" BorderBrush="LightGray">
            <Image Source="{Binding Path=LogoImage}" Height="25" HorizontalAlignment="Left" Margin="0, 0, 0, 2"/>
            </Border>
            <Border BorderThickness="0, 0, 0, 1" BorderBrush="LightGray" >
                <Border.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="14" />
                    </Style>
                </Border.Resources>
                <StackPanel Orientation="Horizontal" Margin="2, 3, 0, 5"  >
                    <TextBlock Text="Project  :" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding Path=Project}" VerticalAlignment="Center" Margin="3, 0, 0, 0"/>
                <TextBlock Text="Account  :" VerticalAlignment="Center" Margin="10, 0, 0, 0"/>
                <TextBlock Text="{Binding Path=Account}" VerticalAlignment="Center" Margin="3, 0, 0, 0"/>

            </StackPanel>
           </Border>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0, 0, 0, 5" >
            <!-- IsSynchronizedWithCurrentItem="True"  ??? Do I need this ?-->
            <StackPanel Orientation="Horizontal" DataContext="{Binding Path=FilterViewModel}"  
                        Background="White" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Margin="2, 0, 0, 0"
                        >
                <StackPanel.Resources>
                    <Style TargetType="ComboBox">
                        <Setter Property="Background" Value="White" />
                    </Style>
                </StackPanel.Resources>
                <ComboBox Name="comboResource" Width="160" Margin="0, 0,  25, 0" 
                          ToolTip="{Binding Path=ResourcesComboBoxTip}"
                          ItemsSource="{Binding Path=ResourcesSelection}"
                          SelectedItem="{Binding Path=SelectedResource}"
                          DisplayMemberPath="DisplayName" 
                          Loaded="ComboBox_Loaded"
                          >
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="Background" Value="White" />
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
                        

                <ComboBox Name="comboLogID" Width="160" Margin="0, 0,  20, 0" 
                          ItemsSource="{Binding Path=LogIDs,Mode=OneWay}"
                          SelectedItem="{Binding Path=SelectedLogID}"  
                          Loaded="ComboBox_Loaded"
                          />
                <ComboBox Name="comboSeverity" Width="160" Margin="0, 0,  16, 0" 
                          ItemsSource="{Binding Path=LogSeverityList}"
                          SelectedItem="{Binding Path=SelectedLogSeverity}"
                          Loaded="ComboBox_Loaded"
                          />
                <viewer:JumpToLogDateTimePicker DataContext="{Binding Path=DateTimePickerViewModel}" />
            </StackPanel>
            <Button x:Name="btnRefresh"                  
                    ToolTip="{Binding Path=RefreshCommandToolTip}"
                    Command="{Binding Path=RefreshCommand}" Margin="16, 0, 16, 0" 
                    PreviewMouseLeftButtonDown="btnRefresh_MouseDown"
                    PreviewMouseLeftButtonUp="btnRefresh_MouseUp"
                    MouseEnter="btnRefresh_MouseEnter"
                    MouseLeave="btnRefresh_MouseLeave"
                    >
                <Button.Style>
                    <Style  TargetType="Button">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <ContentPresenter></ContentPresenter>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
                <Image x:Name="refreshImage" Width="32" Height="32" Margin="-1"/>
            </Button>
        </StackPanel>
        <DataGrid Grid.Row="2"  x:Name="dg" 
                   Padding="0,0, 0, 20" IsReadOnly="True"
                  GridLinesVisibility="None" SelectionChanged="dg_SelectionChanged"
                  CanUserResizeRows="False"
                  RowDetailsVisibilityMode="{Binding Path=ToggleExpandHideAll,Mode=OneWay}"
                  RowStyle="{StaticResource rowStyle}"
                  CellStyle="{StaticResource cellStyle}"
                  AutoGenerateColumns="False"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HeadersVisibility="Column"     
                  DataContext="{Binding Path=LogEntriesViewModel}"
                  ItemsSource="{Binding Path=LogEntryList}" 
                  Background="White"
                  BorderThickness="0, 1, 0, 0"
                  EnableRowVirtualization="True"   
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="0, 0, 0,0"
                  PreviewMouseDown="dg_PreviewMouseDown"      
                  AlternatingRowBackground="AliceBlue" AlternationCount="2"
                  >

            <!--                   
                AreRowDetailsFrozen="True" 
            -->

            <!--
            <DataGrid.Style>
                <Style TargetType="DataGridDetailsPresenter">
                    <Setter TargetName="" ></Setter>
                </Style>
            </DataGrid.Style>
            <DataGrid.Style>
                <Style TargetType="DataGrid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Text}" Name="Somename" Value="Something">
                            <Setter Property="RowDetailsVisibilityMode" Value="{Binding}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Style>
                -->

            <DataGrid.GroupStyle>
                <GroupStyle>
                    <!-- <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Path=City}" FontWeight="Bold" Padding="3"/>
                            </StackPanel>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>  -->
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <!--
                                        This appllies customized toggle button.
                                            <Expander IsExpanded="True" Template="{StaticResource SimpleExpanderTemp}">-->
                                        <!--<Expander IsExpanded="True"  Background="LightGray">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal" Margin="0, 1, 0, 1">
                                                        <TextBlock Text="{Binding Path=Name}" />
                                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=ItemCount}" Margin="8,0,4,0"/>
                                                        <TextBlock Grid.Row="0" Grid.Column="2" Text="Element(s)"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>-->

                                        <StackPanel  Background="LightGray">
                                                <StackPanel Orientation="Horizontal" Margin="0, 1, 0, 1">
                                                    <TextBlock Text="{Binding Path=Name}" />
                                                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=ItemCount}" Margin="8,0,4,0"/>
                                                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Element(s)"/>
                                                </StackPanel>
                                            <ItemsPresenter />
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>

            <DataGrid.Columns>
                <!--<DataGridTemplateColumn>
                    --><!-- TODO:  fix the button binding ToggleExpandAllCommand problem
                                Because the DataSource is set to LogEntryList
                    --><!--
                    <DataGridTemplateColumn.Header>
                        <Button Content="E H" Name="btnExpandAll" Click="btnExpandAll_Click" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Expander 
                                      IsExpanded="{Binding Path=DetailsVisibility,
                                RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                Converter={StaticResource VisibilityToNullableBooleanConverter}}"
                                      Template="{StaticResource SimpleExpanderTemp}" 
                                      Margin="10, 0, 3, 0 "
                                      >
                            </Expander>

                            --><!-- <Button Click="ShowHideDetails">Details</Button> --><!--
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->

                <!--<DataGridTextColumn Binding="{Binding SeverityLevel}"  >
                </DataGridTextColumn>-->


                <DataGridTemplateColumn IsReadOnly="True">
                    <DataGridTemplateColumn.Header>
                        <!--<TextBlock >a</TextBlock>-->
                        <Expander x:Name="allExpander" IsExpanded="False" 
                                  ToolTip="Toggle All Log Entries Detail View"
                                  Expanded="allExpander_Expanded" Collapsed="allExpander_Collapsed"
                                 
                                  >
                            <Expander.LayoutTransform >
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"></ScaleTransform>
                            </Expander.LayoutTransform>

                        </Expander>
                        <!--<Button  ToolTip="Exapand All" Click="btnExpandAll_Click"           
                                     Padding="6" BorderThickness="1" 
                                 
                                 >
                            <Path Data="M0,0L3.5,4 7,0z" Fill="#FF000000" Name="Arrow"
                                    Margin="3,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button>-->

                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding Path=SeverityLevel}" Width="12" Margin="5, 1, 10, 1"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTextColumn Binding="{Binding Time}" />
                <!--Header="Time">-->
                <!--DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Content, RelativeSource=
                                         {RelativeSource Mode=TemplatedParent}}"/>
                                <TextBox x:Name="txtTime" Width="100" TextChanged="TextChanged"  />
                            </StackPanel>
                        </DataTemplate>
                    </ -->                
                
                <DataGridTextColumn Binding="{Binding Message}"
                                Header="Message">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <!--<TextBlock Text="{Binding Content, RelativeSource=
                                         {RelativeSource Mode=TemplatedParent}}"/>-->
                                <!-- TextBox x:Name="txtMessage" Width="150" TextChanged="TextChanged"  /-->
                                <TextBox x:Name="txtMessage" Width="500" TextWrapping="Wrap"
                                         Margin="50, 0, 0, 0" FontSize="14"
                                         Padding="0, 1, 0, 1"
                                         Text="{Binding DataContext.MessageFilter,UpdateSourceTrigger=PropertyChanged,
                                                Mode=OneWayToSource,
                                               RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"  >
                                    <!-- Watermark background -->
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                            <Style.Resources>
                                                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                                    <VisualBrush.Visual>
                                                        <Label Content="Search" Foreground="LightGray" />
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Style.Resources>
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                </Trigger>
                                                <Trigger Property="Text" Value="{x:Null}">
                                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="True">
                                                    <Setter Property="Background" Value="White" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>

            </DataGrid.Columns>

            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <!-- Is Border necessary ?  Leave it for now
                    -->
                    <Border BorderThickness="0" Background="White" Padding="0" Margin="30, 0 , 0 , 0" >
                        <TreeView Name="ResultTreeView" BorderThickness="0" 
                                  ItemsSource="{Binding Converter={StaticResource LogItemConverter}}"
                                  ItemTemplateSelector="{StaticResource JPropertyDataTemplateSelector}"   
                                  Foreground="Brown"
                                  >
                            <TreeView.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </TreeView.Template>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}" >
                                    <Setter Property="IsExpanded" Value="True" />
                                    <Setter Property="Foreground" Value="DarkSlateGray" />
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type viewer:ObjectNode}" ItemsSource="{Binding Path=Children}">
                                    <StackPanel Orientation="Horizontal" >
                                        <TextBlock Text="{Binding Path=Name}" Padding="3, 0, 3, 1"   Margin="0,0,5,0"/>
                                        <TextBlock Text=":" Padding="3, 0, 3, 1"   Margin="0,0,5,0" Visibility="{Binding ValueVisibility}"/>
                                        <TextBlock Text="{Binding Path=DisplayValue}"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type viewer:Payload}" ItemsSource="{Binding Path=Value}">
                                    <StackPanel Orientation="Horizontal" >
                                        <TextBlock Text="{Binding Path=Name}" Padding="3, 0, 3, 1"   Margin="0,0,5,0" />
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.Resources>
                        </TreeView>

                    </Border>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>

        </DataGrid>
        <Grid Grid.Row="3" Background="LightSkyBlue">
            <TextBlock Text="{Binding LogLoddingProgress}" TextWrapping="Wrap" TextAlignment="Center" />
            <Button HorizontalAlignment="Right" Margin="0, 5, 20, 5" Name="LoadMore" Content="Load More" 
                    Command="{Binding Path=LoadNextPageCommand}" />
        </Grid>
    </Grid>
</UserControl>
